他的代码单独看不行，现在放一份nsqd开源代码对比着看：
取的是两个库(gidora, nsqd)最核心的代码，gidora已经被封锁，这是我从夏那里拿的；
他的代码有以下特点：

1. 函数和变量命名特别长，特别是函数，基本上是开源项目函数名的两倍长；
2. 重点功能代码的封装性相当不好， gidora.go中serve函数是最核心代码，
   长度超过500行，for，if等嵌套级别最高达到8，9层之多；
   （对比开源项目，简直不忍直视）
3. 有的函数注释长度甚至是代码长度的两倍；
4. 组件根本跑不通，gidora从开始到现在已经一年多了，目前为止一笔消息都没通；
5. 文档相当简略，维护者需要口头询问，有时问都问不清楚；
   一般有一定golang基础的接手一个不是特别复杂的组件，两周基本上能吃通。
  （可参考何中钰改造NSQD的实践，可以问他）；他的代码实在是很难吃懂，
   这点可以询问夏年生，他一直在接他的代码；

总之，他的代码： 难读，难接手，逻辑复杂度太高，文档不健全....
槽点太多，隐患巨大，至于他这个人，我就不想说了，更是无力吐槽。
